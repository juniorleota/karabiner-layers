{
 :profiles {:Default {;; "default true means" rules default goes into this rule if no profiles specified
                      :default true
                      ;; simultaneous key press threshold
                      ;; simlayer is implemented with to_if_alone and simultaneous key press feature
                      :sim     300
                      ;; to_delayed_action_delay_milliseconds
                      ;; checkout karabiner's documentation
                      ;; https://pqrs.org/osx/karabiner/json.html
                      ;; basically it means time after which the key press is count delayed
                      :delay  500
                      ;; https://pqrs.org/osx/karabiner/json.html#to-if-alone
                      ;; to_if_alone_timeout_milliseconds
                      ;; affects to_if_alone behavior
                      ;; simlayer is implemented with to_if_alone and simultaneous key press feature
                      :alone   1000
                      ;; to_if_held_down_threshold_milliseconds
                      ;; check the doc, I don't know what does this mean.
                      ;; maybe press this many milliseconds counts a "held" ?
                      :held     300}}
 :simlayers {
             :space-mode {:key :spacebar}
             :enter-mode {:key :f20}
             :backspace-mode {:key :delete_or_backspace}
             }

 :main [
        {
         :des   "global rules"
         :rules [
                 [[:j :k] :escape]
                 [[:d :f] :return_or_enter]
                 ; seems to be issue with using home row mode
                 ;[:f [] nil {:alone :f :held :left_command}]
                 ]
         }
        {:des   "enter-mode for numbers"
         :rules [:enter-mode
                 [:q :equal_sign]
                 [:a :1]
                 [:s :2]
                 [:d :3]
                 [:f :4]
                 [:g :5]
                 [:h :6]
                 [:j :7]
                 [:k :8]
                 [:l :9]
                 [:semicolon :0]
                 [:comma :open_bracket]
                 [:period :close_bracket]
                 ]
         }
        ;
        {:des   "space mode for symbols"
         :rules [:space-mode
                 ; upper layer left
                 [:q :equal_sign]
                 [:w :!Sequal_sign]
                 ; upper layer right
                 [:o :hyphen]
                 [:p :!Shyphen]
                 [:backslash :!Sbackslash]
                 ; middle layer left
                 [:a :!S1]
                 [:s :!S2]
                 [:d :!S3]
                 [:f :!S4]
                 [:g :!S5]
                 ; middle layer right
                 [:h :!S6]
                 [:j :!S7]
                 [:k :!S8]
                 [:l :!S9]
                 [:semicolon :!S0]
                 ; bottom layer left
                 [:z :grave_accent_and_tilde]
                 [:x :!Sgrave_accent_and_tilde]
                 ; bottom layer right
                 [:m :!Sopen_bracket]
                 [:comma :!Sclose_bracket]
                 [:period :open_bracket]
                 [:slash :close_bracket]
                 ]
         }
        {:des   "backspace mode for navigation"
         :rules [:backspace-mode
                 ; upper layer
                 [:h :left_arrow]
                 [:j :down_arrow]
                 [:k :up_arrow]
                 [:l :right_arrow]
                 [:d :page_down]
                 [:u :page_up]
                 ]
         }
        ]
 }
